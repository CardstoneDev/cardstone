When I want to inform the host of user input, I will send it in the following form:

	userevent{

		name:
		
		IID1:
		
		IID2:

	}

		Event name specifies one of several event types, ie "activated", "played", "attacked".

		IID1 specifies the first card. In the case of certain events, like "endturn", there
		may be no IID1.

		IID2 specifies the second card. In the case of certain events, like "activated", there
		may be no IID2.
		
	LIST of events:
		"targeted": this represents board attacking primarily. It can also be used in the case that a user
		wants to play a card with a targeted ability: if a targeted from hand to a board card comes in
		(I can make this a different event if wanted), there probably ought to be that card played
		with that as the target if valid. Will always be the tag, and two IIDS. I can send the zones 
		theyre in too if wanted.
		
		"played": this represents cards trying to be played. Will always be the card IID and the 
		zone it is trying to be played to. I think if the zone is not literally hand it should be played:
		this just means they dragged it somewhere other than the board, but I think it still should be played
		as long as they dragged it out of the hand.
		
		"turnend":the player tried to end their turn.
		
		

When I send an event, I will expect a response of the form:

	userresponse{

		status:

	}

		status will take the form of either 0 or 1, where 0 means the 
		action was denied and 1 means it was allowed.

When the host needs user input, it may send a message of the form:

	inputrequest{
	
		name:
		
		options{
			option,option
		}
		
		cards{
			card,card,card
		}
	
	}
	
		name will represent one of several possible names for the event, such as
		"choosefrom".
		
		options will represent specific information about the event. This
		may represent valid zones for targeting in the event of a target request,
		etc.
		
		cards will represent the affected cards. This may represent cards
		to choose from in the event of choosing from among several options,
		ooher choices the user might need to make i.e. will your opponent play a spell next turn,
		etc.
